services:

  neox-node:
    container_name: bridge-devnet-neox
    build:
      context: ./go-ethereum
      dockerfile: ../neox.Dockerfile
    ports:
      - 8562:8562
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8562"]
      interval: 3s
      timeout: 2s
      retries: 20
      start_period: 5s
    init: true  # This ensures proper signal handling - https://github.com/krallin/tini/issues/8#issuecomment-146135930
    command: [ "sh", "-c", "make RESTRICTED_NETWORK=0.0.0.0/0 privnet_start && tail -F ./privnet/single/node1/geth_node.log" ]

  neox-funding:
    container_name: bridge-devnet-neox-funding
    image: node:20
    depends_on:
      - neox-node
    volumes:
      - ./tools:/app/tools
      - ./go-ethereum:/app/go-ethereum
    working_dir: /app/tools/neox-funding
    environment:
      - NEOX_RPC_URL=http://neox-node:8562
    command: [
      "sh", "-c",
      "npm install && node fund-neox-accounts.js"
    ]
    restart: "no"

  neox-contracts:
    container_name: bridge-devnet-deploy-neox-message-bridge
    build:
      dockerfile_inline: |
        FROM node:20
        RUN apt-get update && apt-get install -y jq
    depends_on:
      - neox-node
    volumes:
      - ./bridge-evm-contracts:/app
      - ./tools:/tools
      - ./tools/neox-funding/neox-wallets:/app/wallets
    working_dir: /app
    environment:
      - NEOX_RPC_URL=http://neox-node:8562
      - DEPLOYER_WALLET_JSON=/app/wallets/deployer.json
    command: ["bash", "/tools/deploy/deploy-neox-message-bridge-contracts.sh"]
    init: true
    restart: "no"

  neon3-node:
    container_name: bridge-devnet-neon3
    image: ghcr.io/axlabs/neo3-privatenet-docker/neo-cli-with-plugins:neo-node-3.8.2
    ports:
      - 40332:40332
    healthcheck:
      test: ["CMD-SHELL", "curl -sSf -X POST http://127.0.0.1:40332 \
        -H 'Content-Type: application/json' \
        -d '{\"jsonrpc\":\"2.0\",\"method\":\"getversion\",\"params\":[],\"id\":1}' \
        | grep -q 'Neo'"]
      interval: 3s
      timeout: 2s
      retries: 20
      start_period: 5s
    volumes:
      - ./neon3-config/config-consensus.privatenet3.json:/neo-cli/config.json:ro
      - ./neon3-config/wallet-consensus.privatenet3.json:/neo-cli/wallet.json:ro
      - ./neon3-config/rpcserver.config-consensus.json:/neo-cli/Plugins/RpcServer/RpcServer.json:ro
      - ./neon3-config/dbft.config-consensus.json:/neo-cli/Plugins/DBFTPlugin/DBFTPlugin.json:ro
      - ./neon3-config/applicationlogs.config-consensus.json:/neo-cli/Plugins/ApplicationLogs/ApplicationLogs.json:ro
      - ./neon3-config/tokentracker.config-consensus.json:/neo-cli/Plugins/TokensTracker/TokensTracker.json:ro
    init: true
    entrypoint: [
      "sh", "-c",
      "screen -dmS neo-node dotnet neo-cli.dll && sleep 15 && tail -f ./Logs/ConsensusService/*"
    ]

  neon3-funding:
    container_name: bridge-devnet-neon3-funding
    build:
      dockerfile_inline: |
        FROM ubuntu:24.04
        RUN apt-get update && apt-get install -y curl jq
    depends_on:
      - neon3-node
    volumes:
      - ./tools:/tools
    environment:
      - N3_JSON_RPC=http://neon3-node:40332
      - GAS_AMOUNT=10000000000
      - GAS_TOKEN_HASH=0xd2a4cff31913016155e38e474a2c06d08be276cf
      - FUNDED_ADDRESS=NYCtX5TPmCyLJSNATAufWfTgMoCit24QQr
    working_dir: /tools/neon3-funding
    command: [
      "sh", "-c", 
      "echo \"Funding accounts...\" \
        && chmod u+x neon3-funding.sh \
        && ./neon3-funding.sh $$FUNDED_ADDRESS $$GAS_AMOUNT \
        echo \"Funding complete.\"
      "
      ]

  neon3-contracts:
    container_name: bridge-devnet-deploy-n3-message-bridge
    build:
      context: ./
      dockerfile_inline: |
        FROM eclipse-temurin:8-jdk-jammy
        RUN apt-get update \
          && apt-get install -y netcat coreutils curl expect vim-common jq \
          && rm -rf /var/lib/apt/lists/*
        WORKDIR /n3-contracts
    depends_on:
      - neon3-node
    volumes:
      - ./bridge-neo-contracts:/n3-contracts:rw
      - ./tools:/tools
      - ./tools/neon3-funding/neon3-wallets:/n3-wallets:ro
    working_dir: /n3-contracts
    environment:
      - N3_JSON_RPC=http://neon3-node:40332
      - WALLET_FILEPATH_DEPLOYER=/n3-wallets/deployer.json
      - WALLET_PASSWORD_DEPLOYER=
      - WALLET_FILEPATH_OWNER=/n3-wallets/owner.json
      - WALLET_PASSWORD_OWNER=
      - WALLET_FILEPATH_GOVERNOR=/n3-wallets/governor.json
      - WALLET_PASSWORD_GOVERNOR=
      - MANAGEMENT_CONTRACT_NAME=BridgeManagement
      - MANAGEMENT_VALIDATOR_THRESHOLD=2
      - MANAGEMENT_NUMBER_OF_VALIDATORS=2
      - ROLE_OWNER_ADDRESS=NRozNKnv4aSMEUL3KyD4UyeHoiPdLpi4y6
      - ROLE_RELAYER_ADDRESS=NV9K66eGN9qjJGCFMo5ftJDQeWkG4AP6E1
      - ROLE_GOVERNOR_ADDRESS=NNTRbhrT1qbJ2qbY1qFnwumjs6f1B3Ev54
      - ROLE_SECURITY_GUARD_ADDRESS=NNTRbhrT1qbJ2qbY1qFnwumjs6f1B3Ev54
      - ROLE_GOVERNOR_ADDRESS=NNTRbhrT1qbJ2qbY1qFnwumjs6f1B3Ev54
      - ROLE_SECURITY_GUARD_ADDRESS=NNTRbhrT1qbJ2qbY1qFnwumjs6f1B3Ev54
      - BRIDGE_CONTRACT_NAME=Bridge
      - LINKED_CHAIN_ID=2312251829
    entrypoint: [
      "bash", "-c",
      "source /tools/utils/extract-pubkeys.sh /n3-wallets \
      && bash /tools/deploy/wait-for-neon3-funding.sh \
      && expect -n /tools/deploy/deploy-n3-message-bridge-contracts.expect \
      && bash /tools/register/neo-set-native-bridge.sh \
      && bash /tools/register/neo-register-neo-token.sh \
      && bash /tools/unpause/neo-unpause-all.sh"
    ]

  #  RabbitMQ Management UI: http://localhost:15672 (login: admin/admin123)
  #  RabbitMQ AMQP: amqp://admin:admin123@localhost:5672
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: bridge-devnet-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    init: true
#    healthcheck:
#      test: ["CMD", "rabbitmq-diagnostics", "ping"]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#      start_period: 30s

volumes:
  rabbitmq_data:
